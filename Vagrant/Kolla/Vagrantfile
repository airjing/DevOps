# -*- mode: ruby -*-
# vi: set ft=ruby :
Vagrant.configure("2") do |config|
  config.ssh.insert_key = false
# VM as 1st host of kolla, also called all-in-one
# Manuall created two NICs.
# eth0 - Docker NAT switch. static IP 10.0.75.10
# eth1 - Default swtich connect to external network, DHCPed.
  config.vm.define "kolla" do |a|
    a.vm.box = "generic/ubuntu1604"
    a.vm.hostname = "kolla"
    a.vm.provider "hyperv" do |h|
      h.vmname = "Vagrant-Kolla"
      h.cpus = 8
      h.memory = 8192    
      h.linked_clone = true
      h.enable_virtualization_extensions = true
    end
    a.vm.provision "file",source: "163-xenial.list",destination: "$HOME/163-xenial.list"
    a.vm.provision "file",source: "installkolla.sh",destination: "$HOME/installkolla.sh"
    a.vm.provision "file",source: "sshkey.sh",destination: "$HOME/sshkey.sh"
    a.vm.provision "shell" do |s0|
      run = "always"
      s0.inline = "chmod 755 installkolla.sh"
    end
    a.vm.provision "shell" do |s1|
      run = "always"
      s1.path = "installkolla.sh"
    end
    a.vm.provision "shell" do |s2|
      run = "always"
      s2.inline = "chmod 755 sshkey.sh"
    end
    a.vm.provision "shell" do |s3|
      run = "runonce"
      s3.path = "sshkey.sh"
    end
    # if synced_folder mount failed on domain joined machine, manually mount it.
    # sudo mount.cifs //10.164.103.105/e$/Development/DevOps/playbook ~/playbook -o username=username,domain=domainname,password=passwd
    # run net share on host to get sharename
    # copy ssh pub key to ansible host
    # ssh-copy-id -i ~/.ssh/id_rsa.pub vagrant@127.0.0.1
    #a.vm.synced_folder "./playbook","/home/vagrant/playbook",type:"smb",smb_password:"P@ssword",smb_username:"Administrator"    
  end
  # kolla 2nd host. once it deployed, manually add 2rd NIC.
  config.vm.define "kollahost" do |k|
    k.vm.box = "generic/ubuntu1604"
    k.vm.hostname = "kollahost"    
    k.vm.provider "hyperv" do |h|
      h.vmname = "Vagrant-kollahost"
      h.cpus = 8
      h.memory = 8192
      h.maxmemory = nil
      h.linked_clone = true
      h.enable_virtualization_extensions = true
    end
  end
end