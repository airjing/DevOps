vars:
  user: "{{ ansible_user }}"
  proj_app: mezzanine_example
  proj_name: "{{ proj_app }}"
  venv_home: "{{ ansible_env.HOME}}/.virtualenvs"
  venv_path: "{{ venv_home}}/{{ proj_name}}"
  proj_path: "{{ ansible_env.HOME}}/mezzanine/{{ proj_name }}"
  settings_path: "{{ proj_path}}/{{ proj_name}}"
  reqs_path: requirements.txt
  manage: "{{ python }}/{{ proj_path}}/manage.py"
  live_hostname: web1.azure.io
  repo_url: git@github.com:ansiblebook/mezzanine_example.git
  locale: en_US.UTF-8
  conf_path: /etc/nginx/conf
  tls_enabled: True
  python: "{{ venv_path }}/bin/python"
  db_name: "{{ proj_name }}"
  db_user: "{{ proj_name }}"
  db_pass: "{{ proj_name }}"
  db_host: localhost
  db_port: 5432
  gunicorn_procname: gunicorn_mezzanine
  num_workers: "multiprocessing.cpu_count()*2 + 1"
vars_files:
  - secrets.yml
tasks:
- name: install apt packages
  apt: pkg= {{ item }} update_cache=yes cache_valid_time=3600
  become: True
  with_items:
  - git@github.com
  - libjpeg-dev
  - libpq-dev
  - memcached
  - nginx
  - postgresql
  - python-dev
  - python-pip
  - python-psycopg2
  - python-setuptools
  - python-virtualenv
  - supervisor
- name: check out the repositor on the host 
  git: repo={{ repo_url }} dest={{ proj_path }} accept_hostkey=yes

- name: install python requirements globally via pip
  pip: name={{ item }} state=latest
  with_items:
  - pip
  - virtualenv
  - virtualenvwrapper
  become: True

- name: install requirements.txt
  pip: requirements={{ proj_path }}/{{ reqs_path }} virtualenv={{ venv_path }}

- name: install required python packages
  pip: name={{ item }} virtualenv={{ venv_path }}
  with_items:
  - gunicorn
  - setproctitle
  - psycopg2
  - django-compressor
  - python-memcached

- name: copy requirements.txt file
  copy: src=files/requirements.txt dest=~/requirements.txt

- name: install packages
  pip: requirements=~/requirements.txt virtualenv={{ venv_path }}

- name: python packages
  pip: name={{ item.name }} version={{ item.version }} virtualenv={{ venv_path }}
  with_items:
    - {name:mezzanine,version:4.2.2}
    - {name:gunicorn,version:19.6.0}
    - {name:setproctitle,version:1.1.10}
    - {name:psycopg2,version:2.6.2}
    - {name:django-compressor,version:2.1}
    - {name:python-memcached,version:1.58}

- name: create project locale
  locale_gen: name={{ locale }}
  become: True

- name: create a db user
  postgresql_user:
    name: {{ db_user}}
    password: {{ db_pass }}
  become: True
  become_user: postgres

- name: create the database
  postgresql_db:
    name: "{{ db_name }}"
    owner: "{{ db_user }}"
    encoding: UTF8
    lc_ctype: "{{ locale }}"
    lc_collate: "{{ locale }}"
    template: template0
  become: True
  become_user: postgres





