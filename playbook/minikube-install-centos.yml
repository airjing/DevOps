---
# Ansible playbook to install minikube on centos7
# https://computingforgeeks.com/how-to-run-minikube-on-kvm/
- hosts: minikube
  gather_facts: yes
  vars:

  remote_user: root
  tasks: 
  - name: rename to minikube
    hostname:
      name: minikube
    become: yes

  #- name: Get the latest version number of kubernetes
  #  shell: "curl https://storage.googleapis.com/kubernetes-release/release/stable.txt"      
  #  register: version
  #- debug: var=version.stdout

  #- name: Download latest kubectl from mirror.azure.cn
  #  get_url: 
  #    url: "http://mirror.kaiyuanshe.cn/kubernetes/kubectl/{{ version.stdout }}/bin/linux/amd64/kubectl"
  #    dest: /usr/local/bin/
  #    mode: +x 
  #  async: 30
  #  poll: 5   
  #  register: result
  #  ignore_errors: True
  #  become: yes
  
  - name: Backup CentOS-Base.repo
    shell: cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup
    become: yes
    ignore_errors: yes

  - name: change centos7 base repo to azure mirror
    copy: src=files/CentOS-Base.repo dest=/etc/yum.repos.d/CentOS-Base.repo      
    become: yes

  - name: Change docker-ce source to azure mirror
    shell: yum-config-manager --add-repo http://mirror.kaiyuanshe.cn/docker-ce/linux/centos/docker-ce.repo
    become: yes

  - name: Change kubernetes to azure mirror
    shell: | 
      cat <<EOF > /etc/yum.repos.d/kubernetes.repo
      [kubernetes]
      name=Kubernetes      
      baseurl=http://mirror.kaiyuanshe.cn/kubernetes/packages/yum/repos/kubernetes-el7-x86_64/
      enabled=1
      gpgcheck=1
      repo_gpgcheck=1
      gpgkey=http://mirror.kaiyuanshe.cn/kubernetes/packages/yum/doc/yum-key.gpg http://mirror.kaiyuanshe.cn/kubernetes/packages/yum/doc/rpm-package-key.gpg
      EOF
      setenforce 0
      yum install -y kubelet kubeadm kubectl    
    become: true
    ignore_errors: yes
  
  - name: Install bash-completion
    yum:
      name:
        - bash-completion
      state: present
    become: yes  

  - name: Source bash completion
    lineinfile:
      path: ~/.bashrc
      insertafter: EOF
      line: source /usr/share/bash-completion/bash_completion
      state: present
      create: yes

  - name: Eanble shell autocompletion
    shell: echo 'source <(kubectl completion bash)' >>~/.bashrc

  - name: Check whether CPU support virtualization or not
    shell: grep -E 'vmx|svm' /proc/cpuinfo
    become: yes

#  - name: Set up stable repository
#    shell: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
#    become: yes

#https://computingforgeeks.com/install-kvm-centos-rhel-ubuntu-debian-sles-arch/
  - name: Install packages of kvm,docker...
    yum:
      name:
#        - qemu-kvm
#        - qemu-img
#        - virt-manager
#        - libvirt
#        - libvirt-python
#        - libvirt-client
#        - libvirt-daemon-kvm
#        - virt-install
#        - virt-viewer
#        - bridge-utils
        - yum-utils
#        - device-mapper-persistent-data
#        - lvm2
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - zlib-devel
        - perl-ExtUtils-MakeMaker
        - asciidoc
        - xmlto
        - openssl-devel
        - wget
        - curl-devel
        - "@^Development Tools"
        #- "@^gnome-desktop-environment"
      state: present
    become: yes
    notify: 
      - reboot
  
#  - name: Download golang
#    get_url:
#      url: http://mirror.kaiyuanshe.cn/go/go1.12.6.linux-amd64.tar.gz
#      dest: /tmp/go1.12.6.linux-amd64.tar.gz
#      force: yes

#  - name: Install golang
#    shell: tar -C /usr/local -xzf /tmp/go1.12.6.linux-amd64.tar.gz
#    become: yes

#  - name: Set environment variable for golang
#    lineinfile:
#      path: ~/.bash.profile
#      insertafter: EOF
#      line: GOPATH=~/go
#      state: present
#      create: yes

#- name: Download latest git
#  get_url:
#    url: https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.22.0.tar.gz
#    dest: /tmp/git-2.22.0.tar.gz
#  ignore_errors: yes

#- name: Install latest git
#  shell: |      
#    tar -zxvf /tmp/git-2.22.0.tar.gz
#    cd /tmp/git-2.22.0
#    autoconf
#    ./configure
#    make -j8 install
#    rm -f /tmp/git-2.22.0.tar.gz
#    rm -rf /tmp/git-2.22.0
#  become: yes
#  ignore_errors: yes

#- name: Git Clone minikube
#  git: 
#    repo: https://github.com/kubernetes/minikube
#    dest: ~/Repos/minikube
#    clone: yes

#- name: Remove kernel 3.10
#  yum:
#    name: 
#      - kernel-tools-3.10*
#      - kernel-3.10.*
#      - kernel-tools-libs-3.10*
#    state: absent
#  become: yes
#  notify:
#    - reboot
#  ignore_errors: yes

#  - name: Add user vagrant to libvirt group
#    user:
#      name: vagrant
#      state: present
#      groups: 
#        - libvirt
#        - docker
#    become: yes    

#  - name: Enable libvirtd
#    service:
#      name: libvirtd
#      state: started
#      enabled: yes
#    become: yes

  - name: Create kvm default network configuration file
    shell: |
      cat <<EOF > /tmp/kvm-network-default.xml
      <network>
        <name>default</name>
        <bridge name="virbr0"/>
        <forward/>
        <ip address="192.168.122.1" netmask="255.255.255.0">
          <dhcp>
            <range start="192.168.122.2" end="192.168.122.254"/>
          </dhcp>
        </ip>
      </network>
      EOF      
  
#  - name: Download kvm default network configuration file
#    get_url:
#      url: https://raw.githubusercontent.com/libvirt/libvirt/master/src/network/default.xml
#      dest: /tmp/kvm-network-default1.xml
#    ignore_errors: yes

#  - name: Define kvm default network
#    shell: |
#      ipvirsh net-define /tmp/kvm-network-default.xml
#      virsh net-start default
#    become: yes
#    ignore_errors: yes
#    # refer to https://computingforgeeks.com/how-to-create-and-configure-bridge-networking-for-kvm-in-linux/

  - name: Enable docker
    service:
      name: docker
      state: started
      enabled: yes
    become: yes

  - name: Download latest Minikube
    get_url:
      url: https://github.com/kubernetes/minikube/releases/download/v1.2.0/minikube-linux-amd64
      dest: /tmp/minikube
      mode: +x
    ignore_errors: yes

 #- name: Copy minikube file
 #  copy: src=files/minikube-linux-amd64 dest=/tmp/minikube

  - name: Install Minikube
    shell: install /tmp/minikube /usr/local/bin
    become: yes
    ignore_errors: yes
  
#https://github.com/kubernetes/minikube/blob/master/docs/drivers.md#vm-driver
#  - name: Install Docker Machine KVM driver
#    get_url:
#      url: https://github.com/kubernetes/minikube/releases/download/v1.2.0/docker-machine-driver-kvm2
#      dest: /usr/local/bin/docker-machine-driver-kvm2
#      mode: +x
#    become: yes
#    ignore_errors: yes

#- name: Copy kvm2 driver if googleapis is unreachable.
#  copy: src=files/docker-machine-driver-kvm2 dest=/usr/local/bin/docker-machine-driver-kvm2
#  become: yes 
  
#- name: chmod for kvm2 driver
#  file:
#    path: /usr/local/bin/docker-machine-driver-kvm2
#    mode: +x
#  become: yes

  - name: Start Minikube
    shell: minikube config set vm-driver none && minikube start --image-repository gcr.azk8s.cn/google_containers
    async: 300
    poll: 10

  - name: Create a Deployment
    shell: kubectl create deployment hello-node --image=gcr.io/hello-minikube-zero-install/hello-node

  handlers:
    - name: reboot
      shell: reboot now
      become: yes
  